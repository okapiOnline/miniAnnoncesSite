<?php

namespace Annonces\BackendBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends EntityRepository
{
    public function myFindAll(){
        // MÃ©thode 1 : en passant par l'EntityManager
        $queryBuilder = $this->createNativeNamedQuery('a');
        $query = $queryBuilder->getQuery();
        $results = $query->getResult();
        return $results;
    }

    public function getPosts(){
        $query = $this->createQueryBuilder('a')

            // Jointure sur l'attribut categories
            ->leftJoin('a.categoryId', 'c')
            ->addSelect('c')
            ->orderBy('a.createdAt', 'DESC')
            ->getQuery();

        $results = $query ->getResult();
        return $results;
    }

    public function getCategories($page, $nbPerPage, $id){
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.categoryId', 'c') //categorie_id pour sermon
            ->addSelect('c')
            ->where('c.id = :id')
            ->andWhere('a.online = :online')
            ->orderBy('a.createdAt', 'DESC')
            ->setParameter('id', $id)
            ->setParameter('online', true)
            ->getQuery();
        $query ->setFirstResult(($page-1) * $nbPerPage)
            ->setMaxResults($nbPerPage);
        return new Paginator($query, true);
    }

    public function lastArticle($limit){
        $queryBuilder = $this->createQueryBuilder('a')
            ->select('a')
            //->from('MeupfPlateformBundle:Article', 'a')
            ->where('a.online = :online')
            ->orderBy('a.createdAt', 'DESC')
            ->setParameter('online', true)
            //->setParameter('identifier', 100)
            ->setMaxResults($limit);
        $query = $queryBuilder->getQuery();
        $resultat = $query->getResult();
        return $resultat;
    }
}
